stages:
  - build-app
  - test
  - sonar-scan
  - build-docker
  - snyk-scan
  - push-to-jfrog

variables:
  # Java App Configuration
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  # SonarCloud Configuration (Stored in GitLab Variables)
  SONAR_HOST_URL: "https://sonarcloud.io"

  # Container Configuration
  DOCKER_IMAGE_NAME: petclinic
  DOCKER_IMAGE_TAG: $CI_COMMIT_SHORT_SHA

  # JFrog Configuration (Stored in GitLab Variables)
  JFROG_URL: "https://trialt1oy3w.jfrog.io/"
  JFROG_REPO: "docker-local"

# Cache dependencies between jobs with improved key for better caching
cache:
  key: maven-cache-${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  paths:
    - .m2/repository
    - target/
  policy: pull-push

# ======= JAVA APPLICATION BUILD =======
build-app:
  stage: build-app
  image: maven:3.8-openjdk-11
  tags:
    - nalla01
  script:
    - echo "Building application with commit SHA: $CI_COMMIT_SHORT_SHA"
    - cd $CI_PROJECT_DIR/java-springboot-microservices-appl/
    - ./mvnw clean dependency:go-offline
    - ./mvnw clean package -DskipTests
  artifacts:
    paths:
      - $CI_PROJECT_DIR/java-springboot-microservices-appl/*/target/*.jar
      - $CI_PROJECT_DIR/java-springboot-microservices-appl/target/*.jar
    expire_in: 1 day
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - changes:
        - java-springboot-microservices-appl/**/*
        - pom.xml

# ======= JAVA TESTING =======
test-app:
  stage: test
  image: maven:3.8-openjdk-11
  tags:
    - nalla01
  needs:
    - build-app
  script:
    - echo "Running tests for commit SHA: $CI_COMMIT_SHORT_SHA"
    - cd $CI_PROJECT_DIR/java-springboot-microservices-appl/
    - ./mvnw test
  artifacts:
    reports:
      junit: $CI_PROJECT_DIR/java-springboot-microservices-appl/*/target/surefire-reports/TEST-*.xml
    paths:
      - $CI_PROJECT_DIR/java-springboot-microservices-appl/*/target/surefire-reports
    expire_in: 1 day
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - changes:
        - java-springboot-microservices-appl/**/*
        - pom.xml

# ======= SONAR CLOUD SCAN =======
sonar-scan:
  stage: sonar-scan
  image: maven:3.8-openjdk-17
  tags:
    - nalla01
  needs:
    - test-app
  script:
    - echo "Running SonarCloud scan for commit SHA: $CI_COMMIT_SHORT_SHA"
    - cd $CI_PROJECT_DIR/java-springboot-microservices-appl/
    - >
      ./mvnw sonar:sonar
      -Dsonar.projectKey=$SONAR_PROJECT_KEY
      -Dsonar.organization=$SONAR_ORGANIZATION
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.java.binaries=*/target/classes
      -Dsonar.sources=.
      -Dsonar.sourceEncoding=UTF-8
      -Dsonar.java.libraries=*/.m2/repository/**/*.jar
      -Dsonar.coverage.jacoco.xmlReportPaths=*/target/site/jacoco/jacoco.xml
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - changes:
        - java-springboot-microservices-appl/**/*
        - pom.xml

# ======= DOCKER CONTAINERIZATION =======
build-docker:
  stage: build-docker
  image: docker:latest
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  needs:
    - build-app
  before_script:
    - echo "Building Docker image for commit SHA: $CI_COMMIT_SHORT_SHA"
    - docker info
  script:
    - cd $CI_PROJECT_DIR/java-springboot-microservices-appl/
    - ls -lah */target/
    - chmod +x build-dev-docker-images.sh
    - ./build-dev-docker-images.sh
    - docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - changes:
        - java-springboot-microservices-appl/**/*
        - pom.xml

# ======= SNYK SECURITY SCAN =======
snyk-scan:
  stage: snyk-scan
  image: snyk/snyk-cli
  needs:
    - build-docker
  script:
    - echo "Running Snyk scan for commit SHA: $CI_COMMIT_SHORT_SHA"
    - snyk auth $SNYK_TOKEN
    - snyk test --all-projects
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  allow_failure: true

# ======= PUSH TO JFROG =======
push-to-jfrog:
  stage: push-to-jfrog
  image: docker:latest
  needs:
    - build-docker
    - snyk-scan
  before_script:
    - echo "Pushing to JFrog for commit SHA: $CI_COMMIT_SHORT_SHA"
    - echo "$JFROG_PASSWORD" | docker login -u "$JFROG_USERNAME" --password-stdin $JFROG_URL
  script:
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $JFROG_URL/$JFROG_REPO/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
    - docker push $JFROG_URL/$JFROG_REPO/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'